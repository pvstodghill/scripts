#! /usr/bin/env perl

use strict;
use feature 'postderef';
use warnings FATAL => 'all';
no warnings "experimental::postderef";
#use Carp::Always;

# use FindBin;
# use lib "$FindBin::Bin";
# use Xyzzy;

use constant { TRUE => 1, FALSE => 0 };

# 'wide character' warning.
binmode(STDIN, ":utf8");
binmode(STDOUT, ":utf8");

# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_h;
our $opt_g = "5Mbps";
our $opt_p = 2;

my $usage_str = "";
my $progname = basename($0);
$usage_str .= "Usage: $progname [options] reads1.fastq.gz reads2.fq ...\n";

$usage_str .= "-h - print help\n";
$usage_str .= "-g NUM - genome size [$opt_g]\n";
$usage_str .= "-g FASTA_FILE - genome to use for size calculation\n";

sub usage {
  print STDERR $usage_str;
  exit(@_);
}

my $stat = getopts('g:hp:');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}
if (scalar(@ARGV) == 0) {
  usage(1);
}

# ------------------------------------------------------------------------
# Compute genome size
# ------------------------------------------------------------------------

my $genome_size;

if ( -e $opt_g ) {

  my $fh;
  if ( $opt_g =~ /.gz$/ ) {
    open($fh, "-|", "gzip -cd $opt_g") || die "Cannot open: <<$opt_g>>,";
  } else {
    open($fh, "<", $opt_g) || die "Cannot open: <<$opt_g>>,";
  }
  $genome_size = 0;
  while (<$fh>) {
    chomp;
    if (/^>/) {
      next;
    } else {
      $genome_size += length($_);
    }
  }
  close ($fh) || die;

} else {

  ($opt_g =~ /^([0-9.][0-9.,]*)([a-zA-Z]?)/) || die "Ill-formed genome size.";
  my ($num,$factor) = ($1,lc($2));
  $num =~ s/,//g;

  if ( $factor eq "" ) {
    $genome_size = $num;
  } elsif ($factor eq "k") {
    $genome_size = $num * 1000;
  } elsif ($factor eq "m") {
    $genome_size = $num * 1000000;
  } elsif ($factor eq "g") {
    $genome_size = $num * 1000000000;
  } else {
    die "Ill-formed genome size.";
  }
}

# ------------------------------------------------------------------------
# Count read bases
# ------------------------------------------------------------------------

my $bases = 0;
foreach my $fn ( @ARGV ) {
  my $fh;
  if ( $fn =~ /.gz$/ ) {
    open($fh, "-|", "gzip -cd $fn") || die "Cannot open: <<$fn>>,";
  } else {
    open($fh, "<", $fn) || die "Cannot open: <<$fn>>,";
  }
  my $i=0;
  while (<$fh>) {
    chomp;
    if ($i == 1) {
      $bases += length($_);
    }
    $i = ($i+1) % 4 ;
  }
  close ($fh) || die;
}

# ------------------------------------------------------------------------
# Print results
# ------------------------------------------------------------------------

my $coverage = (1.0*$bases) / (1.0*$genome_size);

printf "%.*f\n", $opt_p, $coverage;
